# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: ISA CICD Project

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{secrets.DB_USERNAME}}
          POSTGRES_PASSWORD: ${{secrets.DB_PASSWORD}}
          POSTGRES_DB: drinkmedb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Build with Maven
      run: mvn clean install
      
    - name: Build & push Docker image backend
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: pierpaolopazzi23/isa-project-backend
        tags: latest
        registry: docker.io
        dockerfile: ./DrinkmeWebParent/DrinkmeBackEnd/Dockerfile
        username: ${{ secrets.DOCKER_USERNAME  }}
        password: ${{ secrets.DOCKER_PASSWORD  }}
        
    - name: Build & push Docker image frontend
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: pierpaolopazzi23/isa-project-frontend
        tags: latest
        registry: docker.io
        dockerfile: ./DrinkmeWebParent/DrinkmeFrontEnd/Dockerfile
        username: ${{ secrets.DOCKER_USERNAME  }}
        password: ${{ secrets.DOCKER_PASSWORD  }}

  
    
